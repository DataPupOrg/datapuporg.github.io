---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Author from '../../components/Author.astro';
import { getCollection } from 'astro:content';
import authors from '../../data/authors.json';

// Get all blog posts
const posts = await getCollection('blog');

// Sort posts by date
const sortedPosts = posts.sort((a, b) => {
  return new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf();
});
---

<BaseLayout title="Blog - DataPup" description="Updates, tutorials, and insights from the DataPup team">
  <Header />
  <main class="blog-index">
    <div class="container">
      <div class="blog-header">
        <h1 class="text-4xl font-bold mb-4">Blog</h1>
        <p class="text-lg text-muted">
          Updates, tutorials, and insights from the DataPup team
        </p>
      </div>
      
      {sortedPosts.length === 0 ? (
        <div class="empty-state">
          <p class="text-muted">No blog posts yet. Check back soon!</p>
        </div>
      ) : (
        <div class="blog-grid">
          {sortedPosts.map((post) => {
            const { title, description, pubDate, tags, author = 'datapup-team' } = post.data;
            const postDate = new Date(pubDate);
            const formattedDate = postDate.toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            });
            
            return (
              <article class="blog-card card">
                <a href={`/blog/${post.slug}`} class="blog-card-link">
                  <h2 class="blog-card-title">{title}</h2>
                  <p class="blog-card-description">{description}</p>
                  
                  <div class="blog-card-meta">
                    <div class="blog-card-author">
                      <Author authorId={author} />
                    </div>
                    <time datetime={postDate.toISOString()} class="text-sm text-muted">
                      {formattedDate}
                    </time>
                    
                    {tags && tags.length > 0 && (
                      <div class="blog-card-tags">
                        {tags.map((tag: string) => (
                          <span class="badge">{tag}</span>
                        ))}
                      </div>
                    )}
                  </div>
                  
                  <span class="read-more">
                    Read more â†’
                  </span>
                </a>
              </article>
            );
          })}
        </div>
      )}
    </div>
  </main>
  <Footer />
</BaseLayout>

<style>
  .blog-index {
    padding: 6rem 0 4rem;
    min-height: 80vh;
  }
  
  .blog-header {
    text-align: center;
    margin-bottom: 4rem;
  }
  
  .empty-state {
    text-align: center;
    padding: 4rem 0;
  }
  
  .blog-grid {
    display: grid;
    gap: 2rem;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  }
  
  .blog-card {
    position: relative;
    display: flex;
    flex-direction: column;
    background: var(--color-card);
    border: 1px solid var(--color-border);
    border-radius: 1rem;
    overflow: hidden;
    transition: all var(--transition-base);
  }
  
  .blog-card::before {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: 1rem;
    padding: 2px;
    background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity var(--transition-base);
  }
  
  .blog-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(170, 178, 255, 0.2);
    border-color: transparent;
  }
  
  .blog-card:hover::before {
    opacity: 1;
  }
  
  .blog-card-link {
    display: flex;
    flex-direction: column;
    height: 100%;
    color: inherit;
    text-decoration: none;
    padding: 1.5rem;
    position: relative;
    z-index: 1;
  }
  
  .blog-card-link:hover {
    color: inherit;
  }
  
  .blog-card-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    line-height: 1.3;
    color: var(--color-text);
  }
  
  .blog-card:hover .blog-card-title {
    color: var(--color-primary);
  }
  
  .blog-card-description {
    color: var(--color-text-secondary);
    margin-bottom: 1rem;
    flex: 1;
  }
  
  .blog-card-meta {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }
  
  .blog-card-author {
    display: flex;
    align-items: center;
  }
  
  .blog-card-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin-top: 0.5rem;
  }
  
  .read-more {
    color: var(--color-primary);
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    margin-top: auto;
  }
  
  .blog-card:hover .read-more {
    text-decoration: underline;
  }
</style>