---
const navItems = [
  { label: 'Features', href: '#features' },
  { label: 'Roadmap', href: '#roadmap' },
  { label: 'Blog', href: '/blog' },
  { label: 'GitHub', href: 'https://github.com/DataPupOrg/DataPup', external: true }
];
---

<header class="header">
  <div class="container">
    <nav class="floating-nav">
      <div class="nav-content">
      <a href="/" class="logo-link">
        <img src="/logo.svg" alt="DataPup" width="32" height="32" class="logo-svg" />
        <span class="logo-text">DataPup</span>
      </a>
      
      <ul class="nav-links">
        {navItems.map(item => (
          <li>
            <a 
              href={item.href} 
              class="nav-link"
              target={item.external ? '_blank' : undefined}
              rel={item.external ? 'noopener noreferrer' : undefined}
            >
              {item.label}
              {item.external && (
                <svg width="12" height="12" viewBox="0 0 12 12" fill="currentColor" class="external-icon">
                  <path d="M10.6 10.6H1.4V1.4H6V0H1.4C0.63 0 0 0.63 0 1.4V10.6C0 11.37 0.63 12 1.4 12H10.6C11.37 12 12 11.37 12 10.6V6H10.6V10.6ZM7.2 0V1.4H9.59L3.28 7.71L4.29 8.72L10.6 2.41V4.8H12V0H7.2Z"/>
                </svg>
              )}
            </a>
          </li>
        ))}
      </ul>
      
      <button class="theme-toggle-nav" aria-label="Toggle theme">
        <span class="theme-icon sun-icon">‚òÄÔ∏è</span>
        <span class="theme-icon moon-icon">üåô</span>
      </button>
      
      <button class="mobile-menu-toggle" aria-label="Toggle mobile menu">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M3 12h18M3 6h18M3 18h18"/>
        </svg>
      </button>
      </div>
    </nav>
  </div>
</header>

<style>
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 50;
    padding: 1rem 0;
    pointer-events: none;
  }
  
  .header .container {
    display: flex;
    justify-content: center;
  }
  
  .floating-nav {
    background: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 9999px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08), inset 0 2px 4px rgba(255, 255, 255, 0.5);
    padding: 0.5rem 1.5rem;
    pointer-events: auto;
    transition: all 0.3s ease;
  }
  
  html.dark .floating-nav {
    background: rgba(30, 30, 30, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3), inset 0 2px 4px rgba(255, 255, 255, 0.1);
  }
  
  .floating-nav:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.12), inset 0 2px 4px rgba(255, 255, 255, 0.5);
  }
  
  html.dark .floating-nav:hover {
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4), inset 0 2px 4px rgba(255, 255, 255, 0.1);
  }
  
  .nav-content {
    display: flex;
    align-items: center;
    gap: 2rem;
    height: auto;
  }
  
  .logo-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    font-size: 1rem;
    color: var(--color-text);
    transition: transform 0.2s ease;
  }
  
  .logo-link:hover {
    color: var(--color-text);
    transform: scale(1.05);
  }
  
  .logo-svg {
    color: var(--color-primary);
  }
  
  .logo-text {
    display: none;
  }
  
  @media (min-width: 640px) {
    .logo-text {
      display: inline;
    }
  }
  
  .nav-links {
    display: none;
    list-style: none;
    gap: 1.5rem;
    align-items: center;
    margin: 0;
  }
  
  @media (min-width: 768px) {
    .nav-links {
      display: flex;
    }
  }
  
  .nav-link {
    color: var(--color-text-secondary);
    font-weight: 500;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.375rem 0.75rem;
    border-radius: 9999px;
  }
  
  .nav-link:hover {
    color: var(--color-primary);
    background-color: rgba(170, 178, 255, 0.1);
  }
  
  .external-icon {
    opacity: 0.5;
  }
  
  .theme-toggle-nav {
    padding: 0.5rem;
    border-radius: 9999px;
    background-color: rgba(170, 178, 255, 0.1);
    border: none;
    cursor: pointer;
    color: var(--color-text);
    transition: all 0.2s ease;
    font-size: 1.125rem;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.25rem;
    height: 2.25rem;
  }
  
  .theme-toggle-nav:hover {
    background-color: rgba(170, 178, 255, 0.2);
    transform: rotate(15deg) scale(1.1);
  }
  
  .theme-icon {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .sun-icon {
    display: flex;
  }
  
  .moon-icon {
    display: none;
  }
  
  html.dark .sun-icon {
    display: none;
  }
  
  html.dark .moon-icon {
    display: flex;
  }
  
  .mobile-menu-toggle {
    display: flex;
    padding: 0.5rem;
    border-radius: 9999px;
    background-color: rgba(170, 178, 255, 0.1);
    border: none;
    cursor: pointer;
    color: var(--color-text);
    transition: all 0.2s ease;
    width: 2.25rem;
    height: 2.25rem;
    align-items: center;
    justify-content: center;
  }
  
  .mobile-menu-toggle:hover {
    background-color: rgba(170, 178, 255, 0.2);
    transform: scale(1.1);
  }
  
  @media (min-width: 768px) {
    .mobile-menu-toggle {
      display: none;
    }
  }
</style>

<script>
  // Theme toggle functionality
  const themeToggle = document.querySelector('.theme-toggle-nav');
  
  themeToggle?.addEventListener('click', () => {
    const html = document.documentElement;
    const currentTheme = html.classList.contains('dark') ? 'dark' : 'light';
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    html.classList.remove(currentTheme);
    html.classList.add(newTheme);
    localStorage.setItem('theme', newTheme);
  });
</script>